name: Tests

on: [pull_request]

jobs:
  test:
    name: build-and-test
    strategy:
      matrix:
        go-version: [ 1.19.x ]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Clone Metro
        uses: actions/checkout@v2
        with:
          repository: histolabs/metro
          path: './metro'
      - name: Build Metro
        run: |
          cd metro && make install
          bash scripts/single-node.sh &
      - uses: actions/checkout@v2
      - name: Install stable
        run: rustup toolchain install stable
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: '${{ runner.os }}-cargo-registry-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: '${{ runner.os }}-cargo-index-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Start Celestia core app and bridge node
        run: docker-compose -f docker/test-docker-compose.yml up -d bridge0
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all
      - name: Wait (REMOVE THIS LATER)
        run: sleep 15
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -- --nocapture --color always
      - name: Clean up Docker containers used for testing
        run: ./tests/docker/cleanup-docker.sh

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --all-targets -- -D warnings
          