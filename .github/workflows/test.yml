name: Tests

on: [pull_request]

jobs:
  test:
    name: build-and-test
    strategy:
      matrix:
        go-version: [ 1.19.x ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install stable
        run: rustup toolchain install stable
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: '${{ runner.os }}-cargo-registry-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: '${{ runner.os }}-cargo-index-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Install protoc
        run: sudo apt-get install protobuf-compiler
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-run
      - name: create kubernetes in docker cluster
        uses: helm/kind-action@v1.5.0
        with:
          version: v0.18.0
          config: containers/kind-cluster-config.yaml
          cluster_name: test-kind
          kubectl_version: v1.27.1
      - name: deploy ingress nginx as ingress provider
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
      - name: deploy http echo service
        run:  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/docs/examples/http-svc.yaml
      - name: prepull all images required for rust testing
        run: kubectl apply -f templates/sequencer_relayer_stack_prepull.yaml
      - name: wait for the ingress controller to come online
        run: kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=600s
      - name: deploy the ingress object
        run: kubectl apply -f templates/sequencer_relayer_stack_ingress.yaml
      - name: wait for prepull to complete
        run: kubectl wait --for=condition=ready pod --selector=name=sequencer-relayer-stack-prepuller --timeout=600s
      - name: wait for echo service to come online
        run: kubectl wait --for=condition=ready pod --selector=app=http-svc
      - name: test hitting the echo service backend
        run: |
          sudo apt-get install -y curl
          curl 127.0.0.1/hello
      # - name: Test
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: test
      #     args: -- --nocapture --color always

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: Install protoc
        run: sudo apt-get install protobuf-compiler
      - uses: actions/checkout@v1
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --all-targets -- -D warnings
          